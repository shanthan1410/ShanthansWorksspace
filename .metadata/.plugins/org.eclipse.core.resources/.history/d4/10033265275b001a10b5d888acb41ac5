package resources;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.Properties;
import java.util.concurrent.TimeUnit;

import org.apache.logging.log4j.core.util.FileUtils;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.io.FileHandler;

public class base {
	
	// Intailize driver globaly so that we can use for firefox and IE otherwise we need to write three times which is not ideal way
	public static WebDriver driver;
	
	public Properties prop;
	
	public WebDriver intialiszeDriver() throws IOException {
		
		//Properties is class where we can load and get properties of a browser which was defined in different file
		prop = new Properties();
		
		// will store the destination file
		//FileInputStream fis =new FileInputStream("C:\\Users\\peesa\\EndToEndProject\\src\\main\\java\\resources\\data.properties");
		

		// Hard coding path is not allowed becuase it dynamically changes for every user
		// System.getProperty("user.dir") will give path of the current project
		FileInputStream fis =new FileInputStream(System.getProperty("user.dir") +"\\src\\main\\java\\resources\\data.properties");
		
		// will load the destination in properties class and get the property
		prop.load(fis);
		
		//If we want to control which browser we need to execute from commands i.e maven not from code
		// the person who executes the ode need not have knowledge of getting into code understanding the properties where to set
		// chrome , instead simply they can give the maven command
		//mvn test -Dbrowser=chrome
		//String browserName = System.getProperty("browser");
		
		String browserName=prop.getProperty("browser");
		/* browser will not open but all the test will run with chrome binary without opening browswer
		 * in backend it will open in chrome binary ,but nor shown on screen
		 * test will be fast in invoking browser, but actually no diff only few sec
		 * if the browser is open and if we are trying to do any operation if suddenly  the automation browser interacts it may cause failure
		 * 
		 * 
		 * */
		if(browserName.equals("chrome")) {
			System.setProperty("webdriver.chrome.driver", "C://Users//peesa//chromedriver.exe");
			/*
			 * ChromeOptions options =new ChromeOptions(); 
			 * options.addArguments("headless");
			 * driver =new ChromeDriver(options);
			 */
			driver =new ChromeDriver();
		}
		else if(browserName.equals("firefox")) {
			
		}
		else if(browserName.equals("IE")) {
			
		}
		
		driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
		
		// any one can use this method and the return type is driver, and we can use the driver to continue the script
		return driver;
	}
	
	public void getScreenShots(String result) throws IOException {
		
		
		File src=((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
		FileHandler.copy(src, new File("C:\\tests\\"+result+"screenshot1.png"));
		
	}

}
